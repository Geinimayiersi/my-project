{"remainingRequest":"D:\\A1\\第四阶段\\1vue\\vue_ui\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\A1\\第四阶段\\1vue\\vue_ui\\vue_app_000\\vue_app_00\\src\\main.js","dependencies":[{"path":"D:\\A1\\第四阶段\\1vue\\vue_ui\\vue_app_000\\vue_app_00\\src\\main.js","mtime":1564998437957},{"path":"D:\\A1\\第四阶段\\1vue\\vue_ui\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\A1\\第四阶段\\1vue\\vue_ui\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; //引入第三方组件库 mint ui\n//1:完整引入mint-ui组件库中所有组件\n\nimport MintUI from \"mint-ui\"; //2:单独引入mint-ui组件库中样式文件\n\nimport \"mint-ui/lib/style.css\"; //3:将mint-ui注册vue实例中\n\nVue.use(MintUI); //4:将字体图标引入到当前项目中\n\nimport \"./font/iconfont.css\"; //5:引入axios 第三方ajax模块\n\nimport axios from \"axios\"; //6:配置axios 基础路径\n\naxios.defaults.baseURL = \"http://127.0.0.1:3000/\"; //7:配置axios 保存session信息\n\naxios.defaults.withCredentials = true; //8:将axios 注册vue 实例中\n//由于axios不支持 use 将实例添加vue原型\n\nVue.prototype.axios = axios; //main.js \n//9:引入vuex 第三方模块\n\nimport Vuex from \"vuex\"; //11:注册Vuex  顺序 \n//先注册再创建实例对象\n\nVue.use(Vuex); //10:创建Vuex存储实例对象\n\nvar store = new Vuex.Store({\n  state: {\n    cartCount: 0\n  },\n  //共享数据\n  mutations: {\n    //添加修改数据函数\n    increment: function increment(state) {\n      //购物车数量加1\n      state.cartCount++;\n    },\n    clear: function clear(state) {\n      //清空购物车\n      state.cartCount = 0; //购物车数量清零\n    }\n  },\n  getters: {\n    //添加获取数据函数\n    getCartCount: function getCartCount(state) {\n      return state.cartCount;\n    }\n  },\n  actions: {} //添加异步操作数据函数\n\n}); //12:将实例对象添加Vue中\n\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  //App App.vue根组件\n  store: store\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","MintUI","use","axios","defaults","baseURL","withCredentials","prototype","Vuex","store","Store","state","cartCount","mutations","increment","clear","getters","getCartCount","actions","render","h","$mount"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,SAAnB,C,CACA;;AACA,OAAO,uBAAP,C,CACA;;AACAH,IAAII,GAAJ,CAAQD,MAAR,E,CACA;;AACA,OAAO,qBAAP,C,CAEA;;AACA,OAAOE,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,OAAf,GAAuB,wBAAvB,C,CACA;;AACAF,MAAMC,QAAN,CAAeE,eAAf,GAA+B,IAA/B,C,CACA;AACA;;AACAR,IAAIS,SAAJ,CAAcJ,KAAd,GAAsBA,KAAtB,C,CACA;AACA;;AACA,OAAOK,IAAP,MAAiB,MAAjB,C,CACA;AACA;;AACAV,IAAII,GAAJ,CAAQM,IAAR,E,CACA;;AACA,IAAIC,QAAQ,IAAID,KAAKE,KAAT,CAAe;AACzBC,SAAM;AAACC,eAAU;AAAX,GADmB;AACD;AACxBC,aAAU;AAAc;AACtBC,aADQ,qBACEH,KADF,EACQ;AAAM;AACpBA,YAAMC,SAAN;AACD,KAHO;AAIRG,SAJQ,iBAIFJ,KAJE,EAII;AAAU;AACpBA,YAAMC,SAAN,GAAkB,CAAlB,CADU,CACU;AACrB;AANO,GAFe;AAUzBI,WAAQ;AAAG;AACRC,gBADK,wBACQN,KADR,EACc;AACjB,aAAOA,MAAMC,SAAb;AACD;AAHI,GAViB;AAezBM,WAAQ,EAfiB,CAeZ;;AAfY,CAAf,CAAZ,C,CAiBA;;AACA,IAAIpB,GAAJ,CAAQ;AACNE,gBADM;AAENmB,UAAQ;AAAA,WAAKC,EAAErB,GAAF,CAAL;AAAA,GAFF;AAEgB;AACtBU;AAHM,CAAR,EAIGY,MAJH,CAIU,MAJV","sourceRoot":"D:\\A1\\第四阶段\\1vue\\vue_ui\\vue_app_000\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\n//引入第三方组件库 mint ui\r\n//1:完整引入mint-ui组件库中所有组件\r\nimport MintUI from \"mint-ui\"\r\n//2:单独引入mint-ui组件库中样式文件\r\nimport \"mint-ui/lib/style.css\"\r\n//3:将mint-ui注册vue实例中\r\nVue.use(MintUI)\r\n//4:将字体图标引入到当前项目中\r\nimport \"./font/iconfont.css\"\r\n\r\n//5:引入axios 第三方ajax模块\r\nimport axios from \"axios\"\r\n//6:配置axios 基础路径\r\naxios.defaults.baseURL=\"http://127.0.0.1:3000/\"\r\n//7:配置axios 保存session信息\r\naxios.defaults.withCredentials=true\r\n//8:将axios 注册vue 实例中\r\n//由于axios不支持 use 将实例添加vue原型\r\nVue.prototype.axios = axios;\r\n//main.js \r\n//9:引入vuex 第三方模块\r\nimport Vuex from \"vuex\"\r\n//11:注册Vuex  顺序 \r\n//先注册再创建实例对象\r\nVue.use(Vuex)\r\n//10:创建Vuex存储实例对象\r\nvar store = new Vuex.Store({\r\n  state:{cartCount:0},    //共享数据\r\n  mutations:{             //添加修改数据函数\r\n    increment(state){     //购物车数量加1\r\n      state.cartCount++;\r\n    },\r\n    clear(state){         //清空购物车\r\n      state.cartCount = 0;//购物车数量清零\r\n    }       \r\n  },\r\n  getters:{  //添加获取数据函数\r\n     getCartCount(state){\r\n       return state.cartCount;\r\n     }\r\n  },  \r\n  actions:{}   //添加异步操作数据函数\r\n})\r\n//12:将实例对象添加Vue中\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),  //App App.vue根组件\r\n  store               \r\n}).$mount('#app')\r\n"]}]}